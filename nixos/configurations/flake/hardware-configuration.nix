# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/0b67f502-a60c-415b-8ffe-81549c99a207";
      fsType = "btrfs";
      options = ["compress=zstd:1"];
    };
  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/1a66e715-70ef-4fc1-8375-5d697f905435";
      fsType = "btrfs";
      options = ["compress=zstd:2"];
    };


  fileSystems."/boot" =
    { device = "/dev/disk/by-partuuid/e5abfa14-a752-47ff-8ca6-c146445e6ced";
      fsType = "vfat";
      options = ["uid=0" "gid=0" "fmask=0077" "dmask=0077" ];
     
    };



  boot.initrd.luks.devices."dm-root" = 
	{ device = "/dev/disk/by-uuid/552dc146-d779-4831-a648-e7b207780e0b";
	  preLVM = false;
	};
  boot.initrd.luks.devices."dm-home" = {
	device = "/dev/disk/by-uuid/d2c146aa-ceef-4a10-a6aa-fdb8fb9f85ac";
	preLVM = false;
};
#  boot.initrd.luks.devices."dm-swap".device = "/dev/disk/by-uuid/5b0573d9-2aad-4fbd-8f72-b46831b66f4a";

#  swapDevices =
#    [ { device = "/dev/disk/by-uuid/7b243470-d8ef-4921-9e6e-22016d684cb2"; }
#    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  hardware = {
    cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    bluetooth = {
      enable = true;
      package = pkgs.bluez;
      powerOnBoot = true;

    };

  pulseaudio = {
      enable = true;
  };

  graphics.extraPackages = with pkgs; [
    rocm-opencl-icd
    rocm-opencl-runtime
    amdvlk
  ];
  };
}
